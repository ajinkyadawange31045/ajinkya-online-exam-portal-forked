name: Push the Docker image to AWS ECR Repo

on:
  push:
    branches:
      - dev

  # workflow_dispatch:
  #   inputs:
  #     name:
  #       type: choice
  #       description: Which working directory to work on
  #       options: 
  #       - backend
  #       - frontend
  #       required: true 



jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2  # Fetching last two commits to access -> latest and previous commit hashes

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get latest two commit hashes
        id: commits
        run: |
          echo "LATEST_COMMIT=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Build, tag, and push backend or frontend images to Amazon ECR using inputs
        # working-directory: ./backend
        working-directory: ./${{ github.event.inputs.name }}
        run: |
          LATEST_COMMIT=${{ github.event.inputs.name }}-${{ env.LATEST_COMMIT }}
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY=docker-practice  
            # docker-practice name of repo

          # Build and push images for latest and previous commits with --no-cache to ensure unique images
          docker build --no-cache -t $ECR_REGISTRY/$ECR_REPOSITORY:$LATEST_COMMIT .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$LATEST_COMMIT

      # - name: Build, tag, and push frontend images to Amazon ECR
      #   working-directory: ./frontend
      #   run: |
      #     LATEST_COMMIT=${{ env.LATEST_COMMIT }}
      #     ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY=docker-practice

      #     # Build and push images for latest and previous commits with --no-cache to ensure unique images
      #     docker build --no-cache -t $ECR_REGISTRY/$ECR_REPOSITORY:frontend-$LATEST_COMMIT .
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:frontend-$LATEST_COMMIT