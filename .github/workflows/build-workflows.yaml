name: Push the Docker image to AWS ECR Repo using GitHub Actions

on:
  workflow_dispatch:
    inputs:
      name_ajinkya:
        type: choice
        description: Which working directory to work on
        options: 
        - backend
        - frontend
        required: true 
#for commiting check
jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2  # Fetching last two commits to access latest and previous commit hashes

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get latest and previous commit hashes
        id: commits
        run: |
          echo "LATEST_COMMIT=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "PREVIOUS_COMMIT=$(git rev-parse HEAD^)" >> $GITHUB_ENV

      - name: Delete image from ECR with previous commit tag (if exists)
        run: |
          PREVIOUS_COMMIT=${{ env.PREVIOUS_COMMIT }}
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY=docker-practice  # Repository name in ECR

          # Delete the previous image tagged with PREVIOUS_COMMIT if it exists
          aws ecr batch-delete-image \
            --repository-name $ECR_REPOSITORY \
            --image-ids imageTag=${{ github.event.inputs.name_ajinkya }}-$PREVIOUS_COMMIT || echo "No previous image to delete"

      - name: Build, tag, and push backend or frontend images to Amazon ECR using inputs
        working-directory: ./${{ github.event.inputs.name_ajinkya }}
        run: |
          LATEST_COMMIT=${{ github.event.inputs.name_ajinkya }}-${{ env.LATEST_COMMIT }}
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY=docker-practice  # Repository name in ECR

          # Build and push image with unique tag for the latest commit
          docker build --no-cache -t $ECR_REGISTRY/$ECR_REPOSITORY:$LATEST_COMMIT .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$LATEST_COMMIT
